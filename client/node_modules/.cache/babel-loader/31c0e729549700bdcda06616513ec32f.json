{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mdp79\\\\Desktop\\\\04-Supplemental\\\\giphtionary\\\\client\\\\src\\\\components\\\\DisplayWord.js\";\nimport React from \"react\";\nimport { Button } from \"reactstrap\";\nimport API from \"../utils/API\";\nimport toast from \"toast\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst DisplayWord = props => {\n  console.log(\"word\");\n  console.log(props.word);\n  const {\n    user\n  } = useAuth0();\n\n  postToDB = book => {\n    var dbBook = {\n      title: book.title,\n      email: user.email,\n      authors: book.authors,\n      synopsis: book.synopsis,\n      thumbnail: book.thumbnail,\n      link: book.link\n    };\n    API.savedWord.post(\"/api/books\", dbUser).then(() => toast.success(`You added ${book.title} to your bookshelf`)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, props.word.meta.stems[0]), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => {\n      this.postToDB(this.props);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Save Book\"));\n};\n\nexport default DisplayWord;","map":{"version":3,"sources":["C:/Users/Mdp79/Desktop/04-Supplemental/giphtionary/client/src/components/DisplayWord.js"],"names":["React","Button","API","toast","useAuth0","DisplayWord","props","console","log","word","user","postToDB","book","dbBook","title","email","authors","synopsis","thumbnail","link","savedWord","post","dbUser","then","success","catch","err","meta","stems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,QAAQ,EAAzB;;AACAO,EAAAA,QAAQ,GAAIC,IAAD,IAAU;AACnB,QAAIC,MAAM,GAAG;AACXC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KADD;AAEXC,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAFD;AAGXC,MAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHH;AAIXC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QAJJ;AAKXC,MAAAA,SAAS,EAAEN,IAAI,CAACM,SALL;AAMXC,MAAAA,IAAI,EAAEP,IAAI,CAACO;AANA,KAAb;AAQAjB,IAAAA,GAAG,CAACkB,SAAJ,CACGC,IADH,CACQ,YADR,EACsBC,MADtB,EAEGC,IAFH,CAEQ,MAAMpB,KAAK,CAACqB,OAAN,CAAe,aAAYZ,IAAI,CAACE,KAAM,oBAAtC,CAFd,EAGGW,KAHH,CAGUC,GAAD,IAASnB,OAAO,CAACC,GAAR,CAAYkB,GAAZ,CAHlB;AAID,GAbD;;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpB,KAAK,CAACG,IAAN,CAAWkB,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,CAAL,CADF,eAEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,WAAKjB,QAAL,CAAc,KAAKL,KAAnB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAaD,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport API from \"../utils/API\";\nimport toast from \"toast\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst DisplayWord = (props) => {\n  console.log(\"word\");\n  console.log(props.word);\n  const { user } = useAuth0();\n  postToDB = (book) => {\n    var dbBook = {\n      title: book.title,\n      email: user.email,\n      authors: book.authors,\n      synopsis: book.synopsis,\n      thumbnail: book.thumbnail,\n      link: book.link,\n    };\n    API.savedWord\n      .post(\"/api/books\", dbUser)\n      .then(() => toast.success(`You added ${book.title} to your bookshelf`))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <h2>{props.word.meta.stems[0]}</h2>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          this.postToDB(this.props);\n        }}\n      >\n        Save Book\n      </Button>\n    </div>\n  );\n};\n\nexport default DisplayWord;\n"]},"metadata":{},"sourceType":"module"}