{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rache\\\\Desktop\\\\giphtionary\\\\client\\\\src\\\\components\\\\SearchResultContainer.js\";\nimport React, { Component } from \"react\";\nimport Dictaphone from \"./Dictaphone\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\"; //import { text } from \"express\";\n\nclass SearchResultContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      resultsGiphy: [],\n      resultsDictionary: [],\n      speech: \"\"\n    };\n\n    this.searchData = query => {\n      API.searchGiphy(query).then(giphyRes => {\n        API.searchDictionary(query).then(dictRes => {\n          console.log(\"gifs\", giphyRes.data);\n          console.log(\"words\", dictRes.data);\n          this.setState({\n            resultsGiphy: giphyRes.data.data,\n            resultsDictionary: dictRes.data[0]\n          });\n        });\n      });\n    };\n\n    this.handleInputChange = event => {\n      document.getElementById(\"search\").placeholder = \"\";\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value,\n        speech: event.target.placeholder\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      let speech = document.getElementById(\"search\").getAttribute(\"placeholder\");\n      let query = this.state.search === \"\" ? speech : this.state.search;\n      this.searchData(query);\n      this.setState({\n        search: \"\"\n      });\n      document.getElementById(\"search\").placeholder = \"\"; // console.log(speech)\n      // this.setState ({\n      //  speech: speech   \n      // }, () => {\n      //   console.log (this.state.speech)\n      //   if (this.state.search === \"\"){\n      //     this.searchGiphy(this.state.speech);\n      //     this.searchDictionary(this.state.speech);\n      //   }\n      //  else {\n      //    console.log (this.state.search)\n      //   this.searchGiphy(this.state.search);\n      //   this.searchDictionary(this.state.search)\n      //  }\n      //  this.setState({search: \"\", speech: \"\"})\n      // })\n    };\n\n    this.renderResultList = () => {\n      console.log(this.state.resultsDictionary);\n      console.log(this.state.resultsGiphy);\n\n      if (this.state.resultsDictionary && this.state.resultsGiphy.length) {\n        console.log(\"rendering result list\");\n        return /*#__PURE__*/React.createElement(ResultList, {\n          resultsGiphy: this.state.resultsGiphy,\n          resultsDictionary: this.state.resultsDictionary,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    console.log(\"resultsDictionary\");\n    console.log(this.state.resultsDictionary);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dictaphone, {\n      search: this.state.search,\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      handleSpeechChange: this.handleSpeechChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), this.renderResultList());\n  }\n\n}\n\nexport default SearchResultContainer;","map":{"version":3,"sources":["C:/Users/rache/Desktop/giphtionary/client/src/components/SearchResultContainer.js"],"names":["React","Component","Dictaphone","ResultList","API","SearchResultContainer","state","search","resultsGiphy","resultsDictionary","speech","searchData","query","searchGiphy","then","giphyRes","searchDictionary","dictRes","console","log","data","setState","handleInputChange","event","document","getElementById","placeholder","name","target","value","handleFormSubmit","preventDefault","getAttribute","renderResultList","length","render","handleSpeechChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dictaphone from \"./Dictaphone\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\n//import { text } from \"express\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    search: \"\",\n    resultsGiphy: [],\n    resultsDictionary: [],\n    speech: \"\"\n\n  };\n\n  searchData = (query) => {\n    API.searchGiphy(query).then((giphyRes) => {\n      API.searchDictionary(query).then((dictRes) => {\n        console.log(\"gifs\", giphyRes.data);\n        console.log(\"words\", dictRes.data);\n        this.setState({ \n          resultsGiphy: giphyRes.data.data, \n          resultsDictionary: dictRes.data[0]\n        })\n      })\n    })\n  };\n\n  // searchGiphy = (query) => {\n  //   API.searchGiphy(query)\n  //     .then((res) => {\n  //      console.log(\"gifs\", res.data);\n  //      this.setState({ resultsGiphy: res.data.data });\n  //      })\n  //     .catch((err) => console.log(err));\n  // };\n\n  // searchDictionary = (query) => {\n  //   API.searchDictionary(query)\n  //     .then((res) => {\n  //       console.log(\"dictionary\", res.data);\n  //       this.setState({ resultsDictionary: res.data[0] });\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n//typed input\n  handleInputChange = (event) => {\n    document.getElementById(\"search\").placeholder=\"\"\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value,\n      speech: event.target.placeholder\n    });\n  };\n\n\n  // When the form is submitted, search the Giphy API for `this.state.search`\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    let speech = document.getElementById(\"search\").getAttribute(\"placeholder\")\n\n    let query = this.state.search === \"\" ? speech : this.state.search\n    this.searchData(query);\n    this.setState({search: \"\"})\n    \n    document.getElementById(\"search\").placeholder=\"\"\n \n    // console.log(speech)\n    // this.setState ({\n    //  speech: speech   \n    // }, () => {\n    //   console.log (this.state.speech)\n    //   if (this.state.search === \"\"){\n    //     this.searchGiphy(this.state.speech);\n    //     this.searchDictionary(this.state.speech);\n    //   }\n    //  else {\n    //    console.log (this.state.search)\n    //   this.searchGiphy(this.state.search);\n    //   this.searchDictionary(this.state.search)\n    //  }\n    //  this.setState({search: \"\", speech: \"\"})\n    // })\n    \n  };\n\n  renderResultList = () => {\n    console.log(this.state.resultsDictionary);\n    console.log(this.state.resultsGiphy);\n    if (this.state.resultsDictionary && this.state.resultsGiphy.length){\n      console.log(\"rendering result list\")\n      return (<ResultList\n      resultsGiphy={this.state.resultsGiphy}\n      resultsDictionary={this.state.resultsDictionary}\n    />)\n    } else {\n      return <div></div>;\n    }\n  };\n\n  render() {\n    console.log(\"resultsDictionary\")\n    console.log(this.state.resultsDictionary)\n    return (\n      <div>\n        <Dictaphone\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          handleSpeechChange={this.handleSpeechChange}\n        />\n        {this.renderResultList()}\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;"]},"metadata":{},"sourceType":"module"}